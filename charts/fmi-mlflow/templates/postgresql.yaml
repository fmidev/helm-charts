apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.postgresql.clusterName }}
spec:
  instances: {{ .Values.postgresql.instances | default 1 }}
  storage:
    size: {{ .Values.postgresql.storageSize | default "1Gi" }}

  env:
  - name: AWS_REQUEST_CHECKSUM_CALCULATION
    value: "WHEN_REQUIRED"

  postgresql:
    parameters:
      shared_buffers: {{ .Values.postgresql.parameters.sharedBuffers }}

  superuserSecret:
    name: postgresql-superuser-secret

  bootstrap:
    initdb:
      dataChecksums: true # https://cloudnative-pg.io/documentation/1.19/bootstrap/
      database: {{ .Values.postgresql.database | default "app" }}
      owner: {{ .Values.postgresql.owner | default "app" }}
      secret:
        name: postgresql-mlflow-secret

      # create separate database 'users' for user management
      postInitSQL:
        - CREATE database users;
        - GRANT CONNECT ON DATABASE users TO app;
        - ALTER DATABASE users OWNER TO app;

  resources:
    {{- toYaml .Values.postgresql.resources | nindent 4 }}

  backup:
    retentionPolicy: "30d"
    target: "prefer-standby"
    barmanObjectStore:
      destinationPath: "s3://{{ .Values.objectStorage.s3.bucketName }}/{{ .Values.objectStorage.s3.backupPath }}"
      endpointURL: {{ .Values.objectStorage.s3.endpointUrl }}
      s3Credentials:
        accessKeyId:
          name: s3-credentials
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: s3-credentials
          key: AWS_SECRET_ACCESS_KEY
      wal:
        encryption:
        compression: "gzip"

    volumeSnapshot:
      className: "ocs-storagecluster-rbdplugin-snapclass"
      online: true
      onlineConfiguration:
        immediateCheckpoint: false
        waitForArchive: true
      snapshotOwnerReference: "backup"
