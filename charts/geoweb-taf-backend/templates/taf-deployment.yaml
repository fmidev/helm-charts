apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.taf.name }}
  labels:
    app: {{ .Values.taf.name }}
spec:
  replicas: {{ .Values.taf.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.taf.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.taf.name }}
      annotations:
        eks.amazonaws.com/compute-type: ec2
      {{- if .Values.taf.commitHash }}
        commitHash: {{ .Values.taf.commitHash }}
      {{- end }}
    spec:
    {{- if eq .Values.secretProvider "aws" }}
      serviceAccountName: {{ .Values.taf.secretServiceAccount }}
    {{- end }}
    {{- if and .Values.taf.useCustomConfigurationFiles (eq .Values.taf.customConfigurationLocation "s3")}}
      initContainers:
      - name: init
        image: amazon/aws-cli
        command: ["/bin/sh"]
        args:
          - -c
          - |
            export AWS_ACCESS_KEY_ID={{ .Values.taf.awsAccessKeyId }};
            export AWS_SECRET_ACCESS_KEY={{ .Values.taf.awsAccessKeySecret }};
            AWS_DEFAULT_REGION={{ .Values.taf.awsDefaultRegion }};
            aws s3 cp --recursive --exclude "*/*" s3://{{ .Values.taf.s3bucketName }}{{ .Values.taf.customConfigurationFolderPath }} /taf;
        volumeMounts:
        - mountPath: "/taf/"
          name: {{ .Values.taf.name }}-volume
    {{- end }}
      containers:
      - name: {{ .Values.taf.name }}
        image: {{ .Values.taf.registry }}:{{ default .Chart.AppVersion .Values.versions.taf }}
      {{- if .Values.taf.imagePullPolicy }}
        imagePullPolicy: {{ .Values.taf.imagePullPolicy }}
      {{- end }}
      {{- if .Values.taf.postStartCommand }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", {{ .Values.taf.postStartCommand | quote }}]
      {{- end }}
        ports:
        - containerPort: {{ .Values.taf.env.AVIATION_TAF_PORT_HTTP }}
      {{- if .Values.taf.resources }}
        resources: {{ toYaml .Values.taf.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.livenessProbe }}
        livenessProbe: {{ toYaml .Values.taf.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.readinessProbe }}
        readinessProbe: {{ toYaml .Values.taf.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.taf.name }}
        env:
      {{- if .Values.taf.db.useZalandoOperatorDb }}
        - name: PG_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.taf.db.POSTGRES_USER }}.{{ .Values.taf.db.name }}.credentials.postgresql.acid.zalan.do
              key: password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.taf.db.POSTGRES_USER }}.{{ .Values.taf.db.name }}.credentials.postgresql.acid.zalan.do
              key: username
      {{- end }}
        - name: AVIATION_TAF_BACKEND_DB
        {{- if .Values.taf.db.useZalandoOperatorDb }}
          value: "postgresql://$(PG_USER):$(PG_PASS)@{{ .Values.taf.db.name }}:5432/{{ .Values.taf.db.POSTGRES_DB }}"
        {{- else }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.taf.db_secretName }}
              key: AVIATION_TAF_BACKEND_DB
        {{- end }}
        volumeMounts:
      {{- if not .Values.taf.db.useZalandoOperatorDb }}
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      {{- end }}
      {{- if .Values.taf.useCustomConfigurationFiles }}
        - mountPath: {{ .Values.taf.customConfigurationMountPath }}
          name: {{ .Values.taf.name }}-volume
      {{- end }}
      - name: {{ .Values.taf.placeholder.name }}
        image: {{ .Values.taf.placeholder.registry }}:{{ default .Chart.AppVersion .Values.versions.taf }}
      {{- if .Values.taf.imagePullPolicy }}
        imagePullPolicy: {{ .Values.taf.imagePullPolicy }}
      {{- end }}
      {{- if .Values.taf.placeholder.resources }}
        resources: {{ toYaml .Values.taf.placeholder.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.placeholder.livenessProbe }}
        livenessProbe: {{ toYaml .Values.taf.placeholder.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.placeholder.readinessProbe }}
        readinessProbe: {{ toYaml .Values.taf.placeholder.readinessProbe | nindent 10 }}
      {{- end }}
        env:
      {{- if .Values.taf.db.useZalandoOperatorDb }}
        - name: PG_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.taf.db.POSTGRES_USER }}.{{ .Values.taf.db.name }}.credentials.postgresql.acid.zalan.do
              key: password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.taf.db.POSTGRES_USER }}.{{ .Values.taf.db.name }}.credentials.postgresql.acid.zalan.do
              key: username
      {{- end }}
        - name: AVIATION_TAF_BACKEND_DB
        {{- if .Values.taf.db.useZalandoOperatorDb }}
          value: "postgresql://$(PG_USER):$(PG_PASS)@{{ .Values.taf.db.name }}:5432/{{ .Values.taf.db.POSTGRES_DB }}"
        {{- else }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.taf.db_secretName }}
              key: AVIATION_TAF_BACKEND_DB
        {{- end }}
      {{- if .Values.taf.placeholder.TAFPLACEHOLDER_KEEPRUNNING }}
        - name: TAFPLACEHOLDER_KEEPRUNNING
          value: {{ .Values.taf.placeholder.TAFPLACEHOLDER_KEEPRUNNING | quote }}
      {{- end }}
      {{- if not .Values.taf.db.useZalandoOperatorDb }}
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      {{- end }}
      - name: {{ .Values.taf.messageconverter.name }}
        image: {{ .Values.taf.messageconverter.registry }}:{{ .Values.taf.messageconverter.version }}
      {{- if .Values.taf.imagePullPolicy }}
        imagePullPolicy: {{ .Values.taf.imagePullPolicy }}
      {{- end }}
        env:
        - name: AVI_CONTAINER_PORT
          value: {{ .Values.taf.messageconverter.port | quote }}
        ports:
        - containerPort: {{ .Values.taf.messageconverter.port }}
      {{- if .Values.taf.messageconverter.resources }}
        resources: {{ toYaml .Values.taf.messageconverter.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.messageconverter.livenessProbe }}
        livenessProbe: {{ toYaml .Values.taf.messageconverter.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.messageconverter.readinessProbe }}
        readinessProbe: {{ toYaml .Values.taf.messageconverter.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.taf.name }}
      - name: {{ .Values.taf.publisher.name }}
        image: {{ .Values.taf.publisher.registry }}:{{ default .Chart.AppVersion .Values.versions.taf }}
      {{- if .Values.taf.imagePullPolicy }}
        imagePullPolicy: {{ .Values.taf.imagePullPolicy }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.taf.publisher.port }}
      {{- if .Values.taf.publisher.resources }}
        resources: {{ toYaml .Values.taf.publisher.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.publisher.livenessProbe }}
        livenessProbe: {{ toYaml .Values.taf.publisher.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.publisher.readinessProbe }}
        readinessProbe: {{ toYaml .Values.taf.publisher.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.taf.publisher.name }}
        volumeMounts:
        - name: publisher-volume
          mountPath: {{ .Values.taf.publisher.PUBLISH_DIR | quote }}
      - name: {{ .Values.taf.nginx.name }}
        image: {{ .Values.taf.nginx.registry }}:{{ default .Values.taf.nginx.version }}
      {{- if .Values.taf.imagePullPolicy }}
        imagePullPolicy: {{ .Values.taf.imagePullPolicy }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.taf.nginx.NGINX_PORT_HTTP }}
      {{- if .Values.taf.nginx.resources }}
        resources: {{ toYaml .Values.taf.nginx.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.nginx.livenessProbe }}
        livenessProbe: {{ toYaml .Values.taf.nginx.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.taf.nginx.readinessProbe }}
        readinessProbe: {{ toYaml .Values.taf.nginx.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.taf.nginx.name }}
      {{- if and .Values.taf.useCustomConfigurationFiles }}
        volumeMounts:
        - mountPath: "/nginx.conf"
          subPath: "nginx.conf"
          name: {{ .Values.taf.name }}-volume
      {{- end }}
      {{- if .Values.taf.db.enableDefaultDb }}
      - name: {{ .Values.taf.db.name }}
        image: {{ .Values.taf.db.image }}
        ports:
          - containerPort: {{ .Values.taf.db.port }}
        env:
          - name: POSTGRES_DB
            value: {{ .Values.taf.db.POSTGRES_DB }}
          - name: POSTGRES_USER
            value: {{ .Values.taf.db.POSTGRES_USER }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.taf.db.POSTGRES_PASSWORD }}
      {{- end }}
      volumes:
    {{- if .Values.taf.useCustomConfigurationFiles }}
      - name: {{ .Values.taf.name }}-volume
      {{- if eq .Values.taf.customConfigurationLocation "s3"}}
        emptyDir: {}
      {{- else if eq .Values.taf.customConfigurationLocation "local"}}
        persistentVolumeClaim:
          claimName: {{ .Values.taf.name }}-claim
      {{- end }}
    {{- end }}
    {{- if not .Values.taf.db.useZalandoOperatorDb }}
      - name: secrets-store-inline
      {{- if .Values.secretProvider }}
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.taf.spcName | quote }}
      {{- else }}
        secret:
          secretName: {{ .Values.taf.db_secretName | quote }}
      {{- end }}
    {{- end }}
      - name: publisher-volume
      {{- if .Values.taf.publisher.volumeOptions }}
        {{- toYaml .Values.taf.publisher.volumeOptions | nindent 8 }}
      {{- else }}
        emptyDir:
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.taf.name }}
              topologyKey: topology.kubernetes.io/zone
