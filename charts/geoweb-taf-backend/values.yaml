versions:
  taf:

taf:
  name: taf
  registry: registry.gitlab.com/opengeoweb/backend-services/aviation-taf-backend/aviation-taf-backend
  path: /taf/(.*)
  svcPort: 80
  replicas: 1
  db_secret: cG9zdGdyZXNxbDovL2dlb3dlYjpwb3N0Z3Jlc0Bsb2NhbGhvc3Q6NTQzMi90YWY=
  db_secretName: taf-db
  db_secretType: secretsmanager
  spcName: taf-spc
  postStartCommand: bin/admin.sh
  secretServiceAccount: taf-service-account
  resources:
    requests:
      memory: "250Mi"
      cpu: "50m"
    limits:
      memory: "500Mi"
      cpu: "1"
  livenessProbe:
    httpGet:
      path: /healthcheck
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 5
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /healthcheck?readiness=true
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 5
    failureThreshold: 1
  env:
    GEOWEB_KNMI_AVI_MESSAGESERVICES_HOST: "localhost:8081"
    AVIATION_TAF_PORT_HTTP: 8000
    AVIATION_TAF_PUBLISH_HOST: "localhost:8090"
    TAF_CONFIG: config.ini
  messageconverter:
    name: taf-messageconverter
    registry: registry.gitlab.com/opengeoweb/avi-msgconverter/geoweb-knmi-avi-messageservices
    version: "0.2.1"
    port: 8081
    resources:
      requests:
        memory: "250Mi"
        cpu: "50m"
      limits:
        memory: "500Mi"
        cpu: "1"
    livenessProbe:
      httpGet:
        path: /healthcheck
        port: 8081
      initialDelaySeconds: 30
      periodSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /healthcheck?readiness=true
        port: 8081
      initialDelaySeconds: 30
      periodSeconds: 5
      failureThreshold: 1
  publisher:
    name: taf-publisher
    registry: registry.gitlab.com/opengeoweb/backend-services/aviation-taf-backend/aviation-taf-backend-publisher-local
    port: 8090
    PUBLISH_DIR: /app/output
    resources:
      requests:
        memory: "50Mi"
        cpu: "50m"
      limits:
        memory: "100Mi"
        cpu: "1"
    livenessProbe:
      httpGet:
        path: /healthcheck
        port: 8090
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /healthcheck?readiness=true
        port: 8090
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 1
  nginx:
    name: taf-nginx
    registry: registry.gitlab.com/opengeoweb/backend-services/aviation-taf-backend/nginx-aviation-taf-backend
    AVIATION_TAF_ENABLE_SSL: "FALSE"
    NGINX_PORT_HTTP: 80
    NGINX_PORT_HTTPS: 443
    AVIATION_TAF_BACKEND_HOST: localhost:8000
    resources:
      requests:
        memory: "10Mi"
        cpu: "10m"
      limits:
        memory: "100Mi"
        cpu: "100m"
    livenessProbe:
      httpGet:
        path: /health_check
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /health_check?readiness=true
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 1
  placeholder:
    name: taf-placeholder
    registry: registry.gitlab.com/opengeoweb/backend-services/aviation-taf-backend/tafplaceholder-aviation-taf-backend
    TAFPLACEHOLDER_KEEPRUNNING: true
    resources:
      requests:
        memory: "50Mi"
        cpu: "50m"
      limits:
        memory: "100Mi"
        cpu: "1"
    livenessProbe:
      exec:
        command:
        - python3
        - -c
        - "exit(0)"
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 5
    readinessProbe:
      exec:
        command:
        - python3
        - -c
        - "exit(0)"
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 1
  db:
    enableDefaultDb: true
    useZalandoOperatorDb: false
    name: taf-db
    image: postgres
    port: 5432
    POSTGRES_DB: taf
    POSTGRES_USER: geoweb
    POSTGRES_PASSWORD: postgres
    POSTGRES_VERSION: 15
    numberOfInstances: 1
    instanceSize: 100Mi
    zalandoTeamId: geoweb
    enableLogicalBackup: true
    cleanInstall: true
    backupTimestamp: "2030-01-01T00:00:00+00:00"
  useCustomConfigurationFiles: false
  customConfigurationLocation: local
  customConfigurationMountPath: /app/custom
  volumeAccessMode: ReadOnlyMany
  volumeSize: 100Mi

ingress:
  name: nginx-ingress-controller
  ingressClassName: nginx
