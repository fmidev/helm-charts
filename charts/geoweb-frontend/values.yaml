versions:
  frontend:

frontend:
  name: geoweb
  registry: registry.gitlab.com/opengeoweb/opengeoweb
  svcPort: 80
  containerPort: 8080
  replicas: 1
  minPodsAvailable: 0
  auth_secretName: geoweb-auth
  auth_secretType: secretsmanager
  client_id_secretName: geoweb-client-id
  client_id_secretType: secretsmanager
  spcName: geoweb-spc
  secretServiceAccount: geoweb-service-account
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "200Mi"
      cpu: "1"
  startupProbe:
    httpGet:
      path: /assets/config.json?startup=true
      port: 8080
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 12  # Allow a minute for startup
  livenessProbe:
    httpGet:
      path: /assets/config.json
      port: 8080
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 2
  readinessProbe:
    httpGet:
      path: /assets/config.json?readiness=true
      port: 8080
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 1
  env:
    GW_AUTH_LOGOUT_URL: "{app_url}"
    GW_AUTH_TOKEN_URL: https://gitlab.com/oauth/token
    GW_AUTH_LOGIN_URL: https://gitlab.com/oauth/authorize?client_id={client_id}&response_type=code&scope=email+openid+read_repository+read_api&redirect_uri={app_url}/code&state={state}&code_challenge={code_challenge}&code_challenge_method=S256
    GW_FEATURE_FORCE_AUTHENTICATION: false
    GW_FEATURE_MODULE_SPACE_WEATHER: false
    GW_FEATURE_MENU_FEEDBACK: false
    GW_FEATURE_MENU_INFO: true
    GW_FEATURE_MENU_VERSION: false
    GW_FEATURE_MENU_FE_VERSION: true
  useCustomConfigurationFiles: false
  customConfigurationLocation: local
  customConfigurationMountPath: /usr/share/nginx/html/assets/custom
  volumeAccessMode: ReadOnlyMany
  volumeSize: 100Mi
  customConfiguration:
    enabled: false #  Set to true to generate the custom initialPresets JSON file
    files:
      "initialPresets.json":  # This file will be generated and available at /usr/share/nginx/html/assets/custom/
        # Configure all the settings below you want to be included in the custom initialPresets JSON file
        # IMPORTANT: Also configure the app to use this file, set env.GW_INITIAL_PRESETS_FILENAME: custom/initialPresets.json
        preset:
          presetType: "mapPreset"
          presetId: "mapPreset-1"
          presetName: "Layer manager preset"
          defaultMapSettings:
            proj:
              bbox:
                left: 58703.6377
                bottom: 6408480.4514
                right: 3967387.5161
                top: 11520588.9031
              srs: "EPSG:3857"
            layers:
              - name: "WorldMap_Light_Grey_Canvas"
                type: "twms"
                enabled: true
                layerType: "baseLayer"
              - service: "https://geoservices.knmi.nl/wms?DATASET=baselayers"
                name: "countryborders"
                format: "image/png"
                enabled: true
                layerType: "overLayer"
          # Additional sections can be specified here including
          # timeSeriesServices:
          # soundingsCollections:
          # services:
          # baseServices:
          # layers:

ingress:
  name: nginx-ingress-controller
  rules: |
    add_header Document-Policy "js-profiling" always;
    if ($request_uri ~* \.(json)) {
      add_header Cache-Control "no-cache";
    }
    if ($request_uri ~* \.(woff2|svg)) {
      add_header Cache-Control "max-age=604800";
    }
    if ($request_uri ~* \.(webmanifest)) {
      more_clear_headers 'Content-Type';
      add_header Content-Type "application/manifest+json";
      add_header Cache-Control "max-age=604800";
    }
  ingressClassName: nginx
