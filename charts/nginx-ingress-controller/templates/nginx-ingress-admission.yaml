#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    app.kubernetes.io/component: controller
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-controller-admission
#spec:
#  ports:
#  - appProtocol: https
#    name: https-webhook
#    port: 443
#    targetPort: webhook
#  selector:
#    app.kubernetes.io/component: controller
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#  type: ClusterIP
#
#---
#
#apiVersion: batch/v1
#kind: Job
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission-create
#spec:
#  template:
#    metadata:
#      labels:
#        app.kubernetes.io/component: admission-webhook
#        app.kubernetes.io/instance: ingress-nginx
#        app.kubernetes.io/name: ingress-nginx
#        app.kubernetes.io/part-of: ingress-nginx
#        app.kubernetes.io/version: 1.5.1
#      annotations:
#        eks.amazonaws.com/compute-type: ec2
#      name: ingress-nginx-admission-create
#    spec:
#      containers:
#      - args:
#        - create
#        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
#        - --namespace=$(POD_NAMESPACE)
#        - --secret-name=ingress-nginx-admission
#        env:
#        - name: POD_NAMESPACE
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.namespace
#        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343@sha256:39c5b2e3310dc4264d638ad28d9d1d96c4cbb2b2dcfb52368fe4e3c63f61e10f
#        imagePullPolicy: IfNotPresent
#        name: create
#        securityContext:
#          allowPrivilegeEscalation: false
#      nodeSelector:
#        kubernetes.io/os: linux
#      restartPolicy: OnFailure
#      securityContext:
#        fsGroup: 2000
#        runAsNonRoot: true
#        runAsUser: 2000
#      serviceAccountName: ingress-nginx-admission
#
#---
#
#apiVersion: batch/v1
#kind: Job
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission-patch
#spec:
#  template:
#    metadata:
#      labels:
#        app.kubernetes.io/component: admission-webhook
#        app.kubernetes.io/instance: ingress-nginx
#        app.kubernetes.io/name: ingress-nginx
#        app.kubernetes.io/part-of: ingress-nginx
#        app.kubernetes.io/version: 1.5.1
#      annotations:
#        eks.amazonaws.com/compute-type: ec2
#      name: ingress-nginx-admission-patch
#    spec:
#      containers:
#      - args:
#        - patch
#        - --webhook-name=ingress-nginx-admission
#        - --namespace=$(POD_NAMESPACE)
#        - --patch-mutating=false
#        - --secret-name=ingress-nginx-admission
#        - --patch-failure-policy=Fail
#        env:
#        - name: POD_NAMESPACE
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.namespace
#        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343@sha256:39c5b2e3310dc4264d638ad28d9d1d96c4cbb2b2dcfb52368fe4e3c63f61e10f
#        imagePullPolicy: IfNotPresent
#        name: patch
#        securityContext:
#          allowPrivilegeEscalation: false
#      nodeSelector:
#        kubernetes.io/os: linux
#      restartPolicy: OnFailure
#      securityContext:
#        fsGroup: 2000
#        runAsNonRoot: true
#        runAsUser: 2000
#      serviceAccountName: ingress-nginx-admission
#
#---
#
#apiVersion: admissionregistration.k8s.io/v1
#kind: ValidatingWebhookConfiguration
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission
#webhooks:
#- admissionReviewVersions:
#  - v1
#  clientConfig:
#    service:
#      name: ingress-nginx-controller-admission
#      path: /networking/v1/ingresses
#  failurePolicy: Fail
#  matchPolicy: Equivalent
#  name: validate.nginx.ingress.kubernetes.io
#  rules:
#  - apiGroups:
#    - networking.k8s.io
#    apiVersions:
#    - v1
#    operations:
#    - CREATE
#    - UPDATE
#    resources:
#    - ingresses
#  sideEffects: None
#
#---
#
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission
#
#---
#
#apiVersion: rbac.authorization.k8s.io/v1
#kind: Role
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission
#rules:
#- apiGroups:
#  - ""
#  resources:
#  - secrets
#  verbs:
#  - get
#  - create
#
#---
#
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission
#rules:
#- apiGroups:
#  - admissionregistration.k8s.io
#  resources:
#  - validatingwebhookconfigurations
#  verbs:
#  - get
#  - update
#
#---
#
#apiVersion: rbac.authorization.k8s.io/v1
#kind: RoleBinding
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: Role
#  name: ingress-nginx-admission
#subjects:
#- kind: ServiceAccount
#  name: ingress-nginx-admission
#
#---
#
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  labels:
#    app.kubernetes.io/component: admission-webhook
#    app.kubernetes.io/instance: ingress-nginx
#    app.kubernetes.io/name: ingress-nginx
#    app.kubernetes.io/part-of: ingress-nginx
#    app.kubernetes.io/version: 1.5.1
#  name: ingress-nginx-admission
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: ingress-nginx-admission
#subjects:
#- kind: ServiceAccount
#  name: ingress-nginx-admission
#  namespace: {{ .Release.Namespace }} # Required field