apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Values.secrets.namespace }}
  name: {{ .Values.secrets.csiName }}-provider-aws
  labels:
    app: {{ .Values.secrets.csiName }}-provider-aws
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.secrets.csiName }}-provider-aws
  template:
    metadata:
      labels:
        app: {{ .Values.secrets.csiName }}-provider-aws
    spec:
      serviceAccountName: {{ .Values.secrets.serviceAccountName }}
      hostNetwork: false
      containers:
        - name: {{ .Values.providerAwsInstaller.name }}
          image: {{ .Values.providerAwsInstaller.registry }}:{{ .Values.providerAwsInstaller.version }}
          imagePullPolicy: Always
          args:
              - --provider-volume=/etc/kubernetes/secrets-store-csi-providers
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: "/etc/kubernetes/secrets-store-csi-providers"
              name: providervol
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: HostToContainer
      volumes:
        - name: providervol
          hostPath:
            path: "/etc/kubernetes/secrets-store-csi-providers"
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
      nodeSelector:
        kubernetes.io/os: linux