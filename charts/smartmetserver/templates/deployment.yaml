apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.smartmetserver.name }}
  labels:
    app: {{ .Values.smartmetserver.name }}
spec:
  replicas: {{ .Values.smartmetserver.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.smartmetserver.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.smartmetserver.name }}
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - name: {{.Values.smartmetserver.name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- if .Values.image.pullPolicy }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - containerPort: {{ .Values.smartmetserver.containerPort }}
        volumeMounts:
        - mountPath: "/smartmet/data"
          name: smartmetserver-volume
        - mountPath: "/etc/smartmet/smartmet.conf"
          subPath: "smartmet.conf"
          name: smartmet-configuration
        - mountPath: "/var/smartmet/cache"
          name: cache-volume
        livenessProbe:
          httpGet:
            path: /admin?what=qengine
            port: {{ .Values.smartmetserver.containerPort }}
          periodSeconds: {{ .Values.smartmetserver.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /wms?request=getCapabilities&service=WMS
            port: {{ .Values.smartmetserver.containerPort }}
          failureThreshold: {{ .Values.smartmetserver.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.smartmetserver.readinessProbe.periodSeconds }}
        startupProbe:
          httpGet:
            path: /admin?what=qengine
            port: {{ .Values.smartmetserver.containerPort }}
          failureThreshold: {{ .Values.smartmetserver.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.smartmetserver.startupProbe.periodSeconds }}
      volumes:
      - name: smartmetserver-volume
        persistentVolumeClaim:
          claimName: {{ .Values.smartmetserver.name }}-{{ .Values.pvc.name }}
      - name: smartmet-configuration
        configMap:
          name: {{ .Values.smartmetserver.name }}-{{ .Values.smartmetConfCm.name }}
      - name: cache-volume
        emptyDir: {}
