apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "smartmetserver.fullname" . }}-querydata-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "smartmetserver.labels.component" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "configuration") | nindent 4 }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  querydata.conf: |
    {{- if .Values.smartmetConf.querydata }}
    {{- .Values.smartmetConf.querydata | nindent 4 }}
    {{- else }}
    // QueryData Engine Configuration
    // Generated by Helm Chart {{ .Chart.Name }}-{{ .Chart.Version }}
    
    @include "querydata/translations.conf"
    
    verbose = {{ .Values.smartmetConf.server.verbose }};
    
    # Where to cache valid points
    valid_points_cache_dir = "/var/smartmet/cache/validpoints";
    
    # Default producers configuration
    # Note: order is significant
    producers = [];
    
    # Add your producer configurations here
    # Example:
    # producers = ["example_surface", "example_pressure"];
    # 
    # example_surface:
    # {
    #     directory = "/smartmet/data/example/surface/querydata";
    #     pattern = ".*_example_.*_surface\.sqd$";
    #     forecast = true;
    #     type = "grid";
    #     leveltype = "surface";
    #     refresh_interval_secs = 60;
    #     number_to_keep = 4;
    #     multifile = true;
    # };
    {{- end }}