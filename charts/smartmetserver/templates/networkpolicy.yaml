{{- if .Values.networkPolicy.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "smartmetserver.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "smartmetserver.labels.component" (merge (dict "component" "security") .) | nindent 4 }}
  {{- with .Values.networkPolicy.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  podSelector:
    matchLabels:
      {{- include "smartmetserver.selectorLabels" . | nindent 6 }}
  policyTypes:
    {{- if .Values.networkPolicy.ingress.enabled }}
    - Ingress
    {{- end }}
    {{- if .Values.networkPolicy.egress.enabled }}
    - Egress
    {{- end }}
  {{- if .Values.networkPolicy.ingress.enabled }}
  ingress:
    {{- if .Values.networkPolicy.ingress.rules }}
    {{- toYaml .Values.networkPolicy.ingress.rules | nindent 4 }}
    {{- else }}
    # Default ingress rules - allow HTTP traffic from any pod in the namespace
    - from:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: {{ .Values.smartmetserver.containerPort }}
    {{- if .Values.ingress.enabled }}
    # Allow ingress controller access
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: {{ .Values.smartmetserver.containerPort }}
    {{- end }}
    {{- if .Values.serviceMonitor.enabled }}
    # Allow Prometheus scraping
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
        - namespaceSelector:
            matchLabels:
              name: prometheus
      ports:
        - protocol: TCP
          port: {{ .Values.smartmetserver.containerPort }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- if .Values.networkPolicy.egress.enabled }}
  egress:
    {{- if .Values.networkPolicy.egress.rules }}
    {{- toYaml .Values.networkPolicy.egress.rules | nindent 4 }}
    {{- else }}
    # Default egress rules
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow HTTPS for external API calls
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow HTTP for external API calls
    - to: []
      ports:
        - protocol: TCP
          port: 80
    {{- if eq .Values.volume.type "nfs" }}
    # Allow NFS traffic
    - to: []
      ports:
        - protocol: TCP
          port: 2049
        - protocol: UDP
          port: 2049
    {{- end }}
    {{- end }}
  {{- end }}
{{- end }}