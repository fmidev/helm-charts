apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.opmet.name }}
  labels:
    app: {{ .Values.opmet.name }}
spec:
  replicas: {{ .Values.opmet.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.opmet.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.opmet.name }}
      annotations:
        eks.amazonaws.com/compute-type: ec2
      {{- if .Values.opmet.commitHash }}
        commitHash: {{ .Values.opmet.commitHash }}
      {{- end }}
    spec:
    {{- if eq .Values.secretProvider "aws" }}
      serviceAccountName: {{ .Values.opmet.secretServiceAccount }}
    {{- end }}
    {{- if and .Values.opmet.useCustomConfigurationFiles (eq .Values.opmet.customConfigurationLocation "s3")}}
      initContainers:
      - name: init
        image: amazon/aws-cli
        command: ["/bin/sh"]
        args:
          - -c
          - |
            export AWS_ACCESS_KEY_ID={{ .Values.opmet.awsAccessKeyId }};
            export AWS_SECRET_ACCESS_KEY={{ .Values.opmet.awsAccessKeySecret }};
            AWS_DEFAULT_REGION={{ .Values.opmet.awsDefaultRegion }};
            aws s3 cp --recursive --exclude "*/*" s3://{{ .Values.opmet.s3bucketName }}{{ .Values.opmet.customConfigurationFolderPath }} /opmet;
        volumeMounts:
        - mountPath: "/opmet/"
          name: {{ .Values.opmet.name }}-volume
    {{- end }}
      containers:
      - name: {{ .Values.opmet.name }}
        image: {{ .Values.opmet.registry }}:{{ .Values.versions.opmet }}
      {{- if .Values.opmet.imagePullPolicy }}
        imagePullPolicy: {{ .Values.opmet.imagePullPolicy }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.opmet.env.OPMET_BACKEND_PORT_HTTP }}
      {{- if .Values.opmet.resources }}
        resources: {{ toYaml .Values.opmet.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.livenessProbe }}
        livenessProbe: {{ toYaml .Values.opmet.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.readinessProbe }}
        readinessProbe: {{ toYaml .Values.opmet.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.opmet.name }}
        env:
      {{- if .Values.opmet.db.useZalandoOperatorDb }}
        - name: PG_PASS
          valueFrom:
            secretKeyRef:
              name: geoweb.opmet-db.credentials.postgresql.acid.zalan.do
              key: password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: geoweb.opmet-db.credentials.postgresql.acid.zalan.do
              key: username
      {{- end }}
        - name: SQLALCHEMY_DATABASE_URL
        {{- if .Values.opmet.db.useZalandoOperatorDb }}
          value: "postgresql://$(PG_USER):$(PG_PASS)@{{ .Values.opmet.db.name }}:5432/{{ .Values.opmet.db.POSTGRES_DB }}"
        {{- else }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.opmet.db_secretName }}
              key: OPMET_BACKEND_DB
        {{- end }}
        volumeMounts:
      {{- if not .Values.opmet.db.useZalandoOperatorDb }}
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      {{- end }}
      {{- if and .Values.opmet.useCustomConfigurationFiles }}
        - mountPath: {{ .Values.opmet.customConfigurationMountPath }}
          name: {{ .Values.opmet.name }}-volume
      {{- end }}
        command: ["/bin/sh"]
        args: ["-c", "sleep 10 ; gunicorn --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker --log-config opmet_logging.conf opmet_backend.main:app"]
      - name: {{ .Values.opmet.messageconverter.name }}
        image: {{ .Values.opmet.messageconverter.registry }}:{{ .Values.opmet.messageconverter.version }}
      {{- if .Values.opmet.imagePullPolicy }}
        imagePullPolicy: {{ .Values.opmet.imagePullPolicy }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.opmet.messageconverter.port }}
      {{- if .Values.opmet.messageconverter.resources }}
        resources: {{ toYaml .Values.opmet.messageconverter.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.messageconverter.livenessProbe }}
        livenessProbe: {{ toYaml .Values.opmet.messageconverter.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.messageconverter.readinessProbe }}
        readinessProbe: {{ toYaml .Values.opmet.messageconverter.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.opmet.name }}
      - name: {{ .Values.opmet.publisher.name }}
        image: {{ .Values.opmet.publisher.registry }}:{{ .Values.versions.opmet }}
      {{- if .Values.opmet.imagePullPolicy }}
        imagePullPolicy: {{ .Values.opmet.imagePullPolicy }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.opmet.publisher.port }}
      {{- if .Values.opmet.publisher.resources }}
        resources: {{ toYaml .Values.opmet.publisher.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.publisher.livenessProbe }}
        livenessProbe: {{ toYaml .Values.opmet.publisher.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.publisher.readinessProbe }}
        readinessProbe: {{ toYaml .Values.opmet.publisher.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.opmet.publisher.name }}
      {{- if .Values.opmet.ssh_passphrase_secret }}
        env:
        - name: PRIVATE_KEY_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.opmet.ssh_passphrase_secretName }}
              key: SSH_KEY_PASSPHRASE
      {{- end }}
        volumeMounts:
      {{- if .Values.opmet.ssh_secret }}
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      {{- end }}
        - name: publisher-volume
          mountPath: {{ .Values.opmet.publisher.DESTINATION | quote }}
      - name: {{ .Values.opmet.nginx.name }}
        image: {{ .Values.opmet.nginx.registry }}:{{ .Values.versions.opmet }}
      {{- if .Values.opmet.imagePullPolicy }}
        imagePullPolicy: {{ .Values.opmet.imagePullPolicy }}
      {{- end }}
        ports:
        - containerPort: {{ .Values.opmet.nginx.NGINX_PORT_HTTP }}
      {{- if .Values.opmet.nginx.resources }}
        resources: {{ toYaml .Values.opmet.nginx.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.nginx.livenessProbe }}
        livenessProbe: {{ toYaml .Values.opmet.nginx.livenessProbe | nindent 10 }}
      {{- end }}
      {{- if .Values.opmet.nginx.readinessProbe }}
        readinessProbe: {{ toYaml .Values.opmet.nginx.readinessProbe | nindent 10 }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Values.opmet.nginx.name }}
      {{- if .Values.opmet.db.enableDefaultDb }}
      - name: {{ .Values.opmet.db.name }}
        image: {{ .Values.opmet.db.image }}
        ports:
          - containerPort: {{ .Values.opmet.db.port }}
        env:
          - name: POSTGRES_DB
            value: {{ .Values.opmet.db.POSTGRES_DB }}
          - name: POSTGRES_USER
            value: {{ .Values.opmet.db.POSTGRES_USER }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.opmet.db.POSTGRES_PASSWORD }}
      {{- end }}
      volumes:
    {{- if .Values.opmet.useCustomConfigurationFiles }}
      - name: {{ .Values.opmet.name }}-volume
      {{- if eq .Values.opmet.customConfigurationLocation "s3"}}
        emptyDir: {}
      {{- else if eq .Values.opmet.customConfigurationLocation "local"}}
        persistentVolumeClaim:
          claimName: {{ .Values.opmet.name }}-claim
      {{- end }}
    {{- end }}
    {{- if not .Values.opmet.db.useZalandoOperatorDb }}
      - name: secrets-store-inline
      {{- if .Values.secretProvider }}
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.opmet.spcName | quote }}
      {{- else }}
        projected:
          sources:
          {{- if and .Values.opmet.db_secret (not .Values.opmet.db.useZalandoOperatorDb) }}
          - secret:
              name: {{ .Values.opmet.db_secretName }}
          {{- end }}
          {{- if .Values.opmet.ssh_secret }}
          - secret:
              name: {{ .Values.opmet.ssh_secretName }}
          {{- end }}
          {{- if .Values.opmet.ssh_passphrase_secret }}
          - secret:
              name: {{ .Values.opmet.ssh_passphrase_secretName }}
          {{- end }}
      {{- end }}
    {{- end }}
      - name: publisher-volume
      {{- if .Values.opmet.publisher.volumeOptions }}
        {{- toYaml .Values.opmet.publisher.volumeOptions | nindent 8 }}
      {{- else }}
        emptyDir:
      {{- end }}