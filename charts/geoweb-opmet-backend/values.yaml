versions:
  opmet:

opmet:
  name: opmet
  registry: registry.gitlab.com/opengeoweb/backend-services/opmet-backend/opmet-backend
  path: /opmet/(.*)
  svcPort: 80
  replicas: 1
  minPodsAvailable: 0
  db_secret: cG9zdGdyZXNxbDovL2dlb3dlYjpwb3N0Z3Jlc0Bsb2NhbGhvc3Q6NTQzMi9vcG1ldA==
  db_secretName: opmet-db
  db_secretType: secretsmanager
  spcName: opmet-spc
  secretServiceAccount: opmet-service-account
  resources:
    requests:
      memory: "150Mi"
      cpu: "50m"
    limits:
      memory: "300Mi"
      cpu: "1"
  startupProbe:
    httpGet:
      path: /healthcheck?startup=true
      port: 8000
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 24 # Allow 4 minutes for startup
  livenessProbe:
    httpGet:
      path: /
      port: 8000
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 2
  readinessProbe:
    httpGet:
      path: /healthcheck?readiness=true
      port: 8000
    periodSeconds: 45
    timeoutSeconds: 20
    failureThreshold: 1
  env:
    MESSAGECONVERTER_URL: "http://localhost:8080"
    OPMET_BACKEND_PORT_HTTP: 8000
    PUBLISHER_URL: "http://localhost:8090/publish"
    APPLICATION_ROOT_PATH: "/opmet"
  messageconverter:
    name: opmet-messageconverter
    registry: registry.gitlab.com/opengeoweb/avi-msgconverter/geoweb-knmi-avi-messageservices
    version: "v0.11.0"
    port: 8080
    resources:
      requests:
        memory: "250Mi"
        cpu: "50m"
      limits:
        memory: "500Mi"
        cpu: "1"
    startupProbe:
      httpGet:
        path: /healthcheck?startup=true
        port: 8080
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 24 # Allow 4 minutes for startup
    livenessProbe:
      httpGet:
        path: /healthcheck
        port: 8080
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 2
    readinessProbe:
      httpGet:
        path: /healthcheck?readiness=true
        port: 8080
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 2
  publisher:
    name: opmet-publisher
    registry: registry.gitlab.com/opengeoweb/backend-services/opmet-backend/opmet-backend-publisher-local
    version:
    port: 8090
    DESTINATION: /app/output
    resources:
      requests:
        memory: "50Mi"
        cpu: "50m"
      limits:
        memory: "100Mi"
        cpu: "1"
    startupProbe:
      httpGet:
        path: /healthcheck?startup=true
        port: 8090
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 12 # Allow 2 minutes for startup
    livenessProbe:
      httpGet:
        path: /openapi.json
        port: 8090
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 2
    readinessProbe:
      httpGet:
        path: /healthcheck?readiness=true
        port: 8090
      periodSeconds: 45
      timeoutSeconds: 20
      failureThreshold: 1
  nginx:
    name: opmet-nginx
    registry: registry.gitlab.com/opengeoweb/backend-services/auth-backend/auth-backend
    version: "v0.2.0"
    ENABLE_SSL: "FALSE"
    NGINX_PORT_HTTP: 80
    NGINX_PORT_HTTPS: 443
    BACKEND_HOST: 0.0.0.0:8000
    resources:
      requests:
        memory: "10Mi"
        cpu: "10m"
      limits:
        memory: "100Mi"
        cpu: "100m"
    startupProbe:
      httpGet:
        path: /health_check?startup=true
        port: 80
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 12 # Allow a minute for startup
    livenessProbe:
      httpGet:
        path: /health_check
        port: 80
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 2
    readinessProbe:
      httpGet:
        path: /health_check?readiness=true
        port: 80
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 1
  db:
    enableDefaultDb: true
    useZalandoOperatorDb: false
    name: opmet-db
    image: postgres
    port: 5432
    POSTGRES_DB: opmet
    POSTGRES_USER: geoweb
    POSTGRES_PASSWORD: postgres
    POSTGRES_VERSION: 15
    numberOfInstances: 1
    instanceSize: 100Mi
    zalandoTeamId: geoweb
    enableLogicalBackup: true
    cleanInstall: true
    backupTimestamp: "2030-01-01T00:00:00+00:00"
  useCustomConfigurationFiles: false
  customConfigurationLocation: local
  customConfigurationMountPath: /app/configuration_files/custom
  volumeAccessMode: ReadOnlyMany
  volumeSize: 100Mi

ingress:
  name: nginx-ingress-controller
  ingressClassName: nginx
